{"name":"Hue-emulator","tagline":"A Bridge API Emulator for the Philips Hue (Personal Wireless System)","body":"### Hue Emulator.\r\nThe Hue Emulator is a hue Bridge API Emulator for the Philips Hue - Personal Wireless System.  \r\nIt allows developers who don't have access to a Philips Hue system (i.e.  A Bridge + Hue Light Bulbs) to write hue apps.\r\n\r\n<img src=\"https://raw.github.com/SteveyO/Hue-Emulator/master/screenshot.png\" />\r\n\r\n**Note** It should be noted that this is a Bridge API Emulator, ** it is not a hardware Emulator** so response times (for example the number of light/group commands that can be sent per second) will differ to an actual bridge.\r\nFor a true test a Hue Bridge should be used.\r\n\r\n**Note x2** This Emulator is not complete.  For example, there are no Sensors, Rules, MultiSource Luminaires and generally has all fields up to a Hue Bridge API 1.3,  so some later fields may be missing.  If your app focuses on Lights, Groups, Scenes and Schedules (limited) this it should be fine.\r\n\r\n### How to use\r\n\r\nThe emulator is written in Java so a Java Runtime environment is required.\r\n\r\nThe emulator is an executable .jar file, so can either double click or from the command line:-\r\n\r\n    java -jar HueEmulator-v0.6.jar\r\n\r\nNote that if you are running on OS X on Port 80 you may need admin privileges so try:\r\n\r\n    sudo java -jar HueEmulator-v0.6.jar\r\n\r\nEnter the port you want your emulator to run on and click the Start button (this starts the Emulator/HTTP and UPnP Server).\r\nIt is recommended to use port 80, as using port 80 allows the Emulator to be found by hue apps which use Java SDK. However, if port 80 is blocked or inaccessible pick another port.  Note, that the UPNP code is still in Beta and not 100% working (doesn't work with the iOS SDK for example).  This will be improved at some point.\r\nTo check the Emulator is running use the below URL. The full bridge config should be returned, in JSON format:\r\n\r\n    http://localhost:8000/api/newdeveloper\r\n\r\nOr, if you are running on Port 80 then:\r\n\r\n    http://localhost/api/newdeveloper\r\n\t\r\nThe root of the github project contains the **HueEmulator-v0.6.jar** executable, so building the source is not required. \r\n\r\nYou can use the emulator a variety of ways:\r\n\r\n#### Hue API\r\nThe emulator accepts RESTful web service calls (in JSON format) just as the Hue bridge obviously.\r\n\r\nFor more details on the valid Hue API calls consult the documentation at:\r\nhttp://www.developers.meethue.com/\r\n\r\n#### Java/Android SDK\r\nIf you are running the emulator using port 80, the Java SDK should find the emulator using a bridge search.  If port 80 is blocked or inaccessible then, using the Java SDK you can connect to the emulator using the following lines of code:\r\n\r\n    PHAccessPoint lastAccessPoint = new PHAccessPoint();\r\n    lastAccessPoint.setIpAddress(\"192.168.1.1:8000\");   // Enter the IP Address and Port your Emulator is running on here.\r\n    lastAccessPoint.setUsername(\"newdeveloper\");        // newdeveloper is loaded by the emulator and set on the WhiteList.\r\n    phHueSDK.connect(lastAccessPoint);\r\n\t\r\nIf you are testing on Android make sure your Android Wifi and your PC are on the same Network/Wifi.  Additionally if connection failures occur your firewall settings may need adjusting.\r\n\t\r\nSee the code examples on the Philips GitHub page for more info. \r\n\r\n### Currently Implemented Features\r\nThe Emulator currently supports the following:\r\n\r\n* **Lights API**  Get Lights/Update State,  (1.1, 1.4, 1.5 and 1.6 from http://www.developers.meethue.com/documentation/lights-api)\r\n* **Schedules API**  Can create/update/delete Non-Recurring Schedules (Everything from http://www.developers.meethue.com/documentation/schedules-api-0)\r\n* **Groups API**   Can create Groups, run commands for default 0 group.\r\n* **Scenes API**   Can get/create scenes + recall scenes.  Not persisted though, so scenes are lost when emulator is restarted.\r\n* **Adding new Bulbs**  Adding new bulbs is done via the File Menu Option.\r\n* **Loading/saving bridge configs**  As from v0.4 you can load or save full bridge config 'JSON' files.\r\n* **2 Graphical Views** Hue bulbs are displayed in small view, or in a separate window frame showing their current colours/state.\r\n\r\n### TO DO\r\nThe Emulator is currently in development and will be updated as of when new features are implemented.\r\n\r\nThe following features may be added soon (roughly in the below order).\r\n\r\n* **GUI Improvements**  Mouse over helpers for the Light Bulbs + scroll bars for when several lights are added.\r\n* **Recurring Schedules**  Currently cannot create recurring schedules.\r\n\r\n### Support or Contact\r\nThe HueEmulator is currently in alpha.  Please report any bugs on GitHub and if you are using the Emulator and require a feature request drop me a line.\r\n\r\n\r\n","google":"UA-12688341-3","note":"Don't delete this file! It's used internally to help with page regeneration."}